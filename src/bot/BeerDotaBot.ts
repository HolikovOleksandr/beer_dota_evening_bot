import { Bot, Context } from "grammy";
import "dotenv/config";
import {
  beerNightHandler,
  beerNightChoiceHandler,
  statusHandler,
} from "./handlers/beer_night.handler.js";

export class BeerDotaBot {
  public bot: Bot;

  private constructor(token: string) {
    this.bot = new Bot(token);
  }

  // –§–∞–±—Ä–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  public static async create(token: string): Promise<BeerDotaBot> {
    const instance = new BeerDotaBot(token);
    await instance.registerHandlers();
    return instance;
  }

  private async registerHandlers() {
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞
    await this.bot.api.setMyCommands([
      { command: "start", description: "üçª –ü–∏–≤–æ–¥–æ—Ç–Ω–∏–π –≤–µ—á—ñ—Ä?" },
      { command: "status", description: "üëÄ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞–Ω –≤–µ—á–æ—Ä–∞" },
    ]);

    // /start ‚Äî –≤–∏–¥–∞–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –æ–Ω–æ–≤–ª—é—î–º–æ ¬´–∂–∏–≤–µ¬ª –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    this.bot.command("start", async (ctx) => {
      try {
        await ctx.deleteMessage();
      } catch {}
      await beerNightHandler(ctx);
    });

    // /status ‚Äî –≤–∏–¥–∞–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥—É —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞–Ω
    this.bot.command("status", async (ctx) => {
      try {
        await ctx.deleteMessage();
      } catch {}
      await statusHandler(ctx);
    });

    // –í–∞–ª—ñ–¥–Ω—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ –∫–Ω–æ–ø–∫–∏
    const validChoices = [
      "üçª –¢–∞–∫",
      "üòø –¢—ñ–ª—å–∫–∏ –Ω–∞ —Å—É—Ö—É",
      "ü§î –ú–æ–∂–µ –±—É—Ç–∏",
      "üö´ –ù–∞–∂–∞–ª—å",
    ];

    // –õ–æ–≤–∏–º–æ —É—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    this.bot.on("message", async (ctx) => {
      // –ó–∞–≤–∂–¥–∏ –Ω–∞–º–∞–≥–∞—î–º–æ—Å—å –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      try {
        await ctx.deleteMessage();
      } catch {}

      const text = ctx.message?.text;
      // –û–±—Ä–æ–±–ª—è—î–º–æ –ª–∏—à–µ –≤–∞–ª—ñ–¥–Ω—ñ –∫–Ω–æ–ø–∫–∏
      if (text && validChoices.includes(text)) {
        await beerNightChoiceHandler(ctx);
      }
    });
  }

  public async startPolling() {
    console.log("ü¶æ Bot started in long polling mode");
    await this.bot.start();
  }
}
